<?php

/**
 * Implements hook_hosting_service()
 */
function aegir_linode_hosting_service() {
  return array('linode' => 'provider', );
}

/**
 * Implements hook_form_FORM_ID_alter()
 *
 * Alters aegir cloud settings form to add linode api keys.
 */
function aegir_linode_form_aegir_cloud_settings_form_alter(&$form, &$form_state) {

  $form['linode'] = array(
    '#type' => 'fieldset',
    '#title' => t('Linode'),
    '#weight' => -100,
    );

  $url = 'https://manager.linode.com/profile/api';
  $form['linode']['aegir_cloud_linode_api_key'] = array(
    '#type' => 'textfield',
    '#title' => t('API Key'),
    '#description' => t('Enter your Linode API key here. Get your API key at !link', array('!link' => l($url, $url), )),
    '#default_value' => variable_get('aegir_cloud_linode_api_key', ''),
    );

  // Validate the API key.
  $form['#validate'][] = 'aegir_linode_validate_key';


}

/**
 * Form validator to check the API key.
 * @param $form
 * @param $form_state
 */
function aegir_linode_validate_key($form, $form_state) {

  require_once ('Services/Linode.php');


  $apiKey = $form_state['values']['aegir_cloud_linode_api_key'];


  if (empty($apiKey))
    return;

  try {
    $linode = new Services_Linode($apiKey);
    $response = $linode->linode_list();

    foreach ($response['ERRORARRAY'] as $index => $error) {
      form_set_error('aegir_cloud_linode_api_key', $error['ERRORMESSAGE']);
    }


  }
  catch (Services_Linode_Exception $e) {
    form_set_error('aegir_cloud_linode_api_key', $e->getMessage());
  }

}

/**
 * Refresh linode options.
 */
function aegir_linode_refresh_options() {

  require_once dirname(__file__) . '/linode-sdk/Linode.php';

  $apiUsername = variable_get('aegir_cloud_linode_api_username', array());
  $apiKey = variable_get('aegir_cloud_linode_api_key', array());

  // Get Create options
  try {
    $client = Linode_SoapClient::getClient('Linode_Virtual_Guest', null, $apiUsername, $apiKey);
    $options['options'] = $client->getCreateObjectOptions();
    variable_set('aegir_cloud_linode_options', $options['options']);

    $ssh_key_client = Linode_SoapClient::getClient('Linode_Account', null, $apiUsername, $apiKey);
    $ssh_keys = $ssh_key_client->getSshKeys();

    variable_set('aegir_cloud_linode_ssh_keys', $ssh_keys);

    // Save a variable with an array ready to go for form options.
    $key_vars['key'] = (object)sshkey_parse(variable_get('aegir_public_key', ''));
    $fingerprint = theme_sshkey_fingerprint($key_vars);
    foreach ($ssh_keys as $key) {
      $ssh_key_options[$key->id] = $key->label;

      // Save the linode key ID for this aegir_cloud_public_key.
      if ($fingerprint == $key->fingerprint) {
        variable_set('aegir_cloud_public_key_linode_id', $key->id);
      }
    }

    variable_set('aegir_cloud_linode_ssh_keys_options', $ssh_key_options);

    drupal_set_message(t('Linode options and SSH keys have been retrieved.'));

  }
  catch (exception $e) {
    drupal_set_message($e->getMessage(), 'error');
  }
}
